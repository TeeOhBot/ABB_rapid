%%%
  VERSION:1
  LANGUAGE:ENGLISH
%%%

MODULE LOG(SYSMODULE,NOSTEPIN)

  !*****************************************************
  ! * Copyright (C) 2013 Robert Andersson <rob@ernell.se>
  ! *
  ! * Licensed under the Apache License, Version 2.0 (the "License");
  ! * you may not use this file except in compliance with the License.
  ! * You may obtain a copy of the License at
  ! *
  ! *      http://www.apache.org/licenses/LICENSE-2.0
  ! *
  ! * Unless required by applicable law or agreed to in writing, software
  ! * distributed under the License is distributed on an "AS IS" BASIS,
  ! * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! * See the License for the specific language governing permissions and
  ! * limitations under the License.
  !*****************************************************

  !*****************************************************
  ! Module Name: LOG
  ! Version:     0.1b (not yet tested)
  ! Description: Log utility
  ! Date:        2013-12-27
  ! Author:      Robert Andersson <rob@ernell.se>
  ! Internet:    http://github.com/ernell/ABB-RAPID-UTILITY-LIBRARY
  !*****************************************************

  ! Log filename
  LOCAL PERS string LOG_FILENAME:="TraceLog.txt";
  ! Log folder
  LOCAL PERS string LOG_FOLDER:="HOME:";

  ! Loglevels
  CONST num LOG_OFF:=0;   ! No info or logging
  CONST num LOG_ERR:=1;   ! Show only errors on screen
  CONST num LOG_INFO:=2;  ! Normal runtime Information
  CONST num LOG_DEBUG:=3; ! Detailed information
  CONST num LOG_TRACE:=4; ! Detailed information on screen + logfile

  ! Current loglevel
  PERS num LOG_LEVEL:=2;
  
  ! Decimal precision
  LOCAL PERS num LOG_NUMPREC:=4;

  !*****************************************************
  ! Log
  ! Example:
  !          LogNum "My message",LOG_DEBUG;
  !*****************************************************
  PROC Log(string message,num level)
    IF level>=LOG_LEVEL THEN
      TEST level
      CASE LOG_ERROR:
        TPWrite "E:"+message;
      CASE LOG_INFO:
        TPWrite "I:"+message;
      CASE LOG_DEBUG:
        TPWrite "D:"+message;
      CASE LOG_TRACE:
        TPWrite "T:"+message;
        Log2File message;
      ENDTEST
    ENDIF
  ENDPROC

  !*****************************************************
  ! Log together with a numeric value
  ! Example:
  !          LogNum "My message",nValue,LOG_DEBUG;
  !*****************************************************
  PROC LogNum(string message,num value,num level)
    IF level>=LOG_LEVEL THEN
      TEST level
      CASE LOG_ERROR:
        TPWrite "E:"+message\Num:=value;
      CASE LOG_INFO:
        TPWrite "I:"+message\Num:=value;
      CASE LOG_DEBUG:
        TPWrite "D:"+message\Num:=value;
      CASE LOG_TRACE:
        TPWrite "T:"+message\Num:=value;
        Log2File message+NumToStr(value,LOG_NUMPREC);
      ENDTEST
    ENDIF
  ENDPROC

  !*****************************************************
  ! Set filename
  !*****************************************************
  PROC LogFilename(string filename)
    LOG_FILENAME:=filename;
  ENDPROC
  
  !*****************************************************
  ! Set folder
  !*****************************************************
  PROC LogFolder(string folder)
    LOG_FOLDER:=folder;
  ENDPROC

  !*****************************************************
  ! Set precision of numerical values
  !*****************************************************
  PROC LogNumPrec(num value)
    LOG_NUMPREC:=value;
    IF LOG_NUMPREC<0 LOG_NUMPREC:=0;
    IF LOG_NUMPREC>7 LOG_NUMPREC:=7;
  ENDPROC

  !*****************************************************
  ! Save message in a logfile
  !*****************************************************
  LOCAL PROC Log2File(string message)
    ! To be continued
    TPErase;
  ENDPROC
ENDMODULE
