MODULE lib_timewait(SYSMODULE,NOSTEPIN,READONLY)
  
  !*****************************************************
  ! TimeWaitDI
  !
  ! Version: 2016-03-18
  ! 
  ! Description:
  !   Wait for a DI to be 1 or 0 for a specified amount of time.
  !
  ! Arguments:
  !   inputDI:     The digital input
  !   timeToWait:  Time in seconds the DI must be active
  ! Options:
  !   \WaitFalse   Wait for DI to be 0 instead of 1
  !
  ! Examples:
  !
  !  Wait for a laserbeam DI to be =1 for at least 5 seconds without interrupt
  !  TimeWaitDI diLaser,5;
  !
  !  Wait for a laserbeam DI to be =0 for at least 8 seconds without interrupt
  !  TimeWaitDI diLaser,8\WaitFalse;
  !*****************************************************
  PROC TimeWaitDI(VAR signaldi inputDI,num timeToWait,\switch WaitFalse)
    ! Loop until we get a DI for a certain time
    WHILE (NOT TimeWaitDIHelper(inputDI,timeToWait, \WaitFalse?WaitFalse)) DO
      WaitTime 0.1;
    ENDWHILE
  ENDPROC

  !*****************************************************
  ! TimedWaitDIHelper
  ! Version: 2016-03-18
  ! Description:
  !   Wait for a DI to be NOT active for a certain time.
  !   This is just a helper function and not to be used.
  !
  ! Arguments:
  !   inputDI:     The digital input
  !   timeToWait:  Time in seconds the DI must be active
  ! Options:
  !   \WaitFalse   Wait for DI to be 0 instead of 1
  !
  ! Return:
  !  TRUE if DI is active for the specified time
  !  FALSE if activated for a shorter time than specified
  !*****************************************************
  LOCAL FUNC bool TimeWaitDIHelper(VAR signaldi inputDI,num timeToWait,\switch WaitFalse)
    VAR bool answer:=FALSE;

    ! Wait for digital input to be NOT TRUE for the time specified
    IF (Present(WaitFalse)) THEN
      WaitDI inputDI,1\MaxTime:=timeToWait;
    ELSE
      WaitDI inputDI,0\MaxTime:=timeToWait;
    ENDIF
    RETURN answer;
  ERROR
    IF ERRNO=ERR_WAIT_MAXTIME THEN
      ! If we get here, we have the DI for the amount of time specified
      answer:=TRUE;
      TRYNEXT;
    ENDIF
  ENDFUNC

ENDMODULE
